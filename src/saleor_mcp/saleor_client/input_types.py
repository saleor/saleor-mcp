# Generated by ariadne-codegen
# Source: https://master.staging.saleor.cloud/graphql/

from typing import Any, List, Optional

from .base_model import BaseModel, Upload
from .enums import (
    AllocationStrategyEnum,
    AppExtensionMountEnum,
    AppExtensionTargetEnum,
    AppSortField,
    AppTypeEnum,
    AttributeChoicesSortField,
    AttributeEntityTypeEnum,
    AttributeInputTypeEnum,
    AttributeSortField,
    AttributeTypeEnum,
    CategorySortField,
    CheckoutAuthorizeStatusEnum,
    CheckoutChargeStatusEnum,
    CheckoutSortField,
    CollectionPublished,
    CollectionSortField,
    CountryCode,
    DiscountStatusEnum,
    DiscountValueTypeEnum,
    EventDeliveryAttemptSortField,
    EventDeliverySortField,
    EventDeliveryStatusEnum,
    ExportFileSortField,
    ExportScope,
    FileTypesEnum,
    FulfillmentStatus,
    GiftCardEventsEnum,
    GiftCardSettingsExpiryTypeEnum,
    GiftCardSortField,
    JobStatusEnum,
    LanguageCodeEnum,
    MarkAsPaidStrategyEnum,
    MeasurementUnitsEnum,
    MediaChoicesSortField,
    MenuItemsSortField,
    MenuSortField,
    OrderAuthorizeStatusEnum,
    OrderChargeStatusEnum,
    OrderDirection,
    OrderEventsEnum,
    OrderSortField,
    OrderStatus,
    OrderStatusFilter,
    PageSortField,
    PageTypeSortField,
    PaymentChargeStatusEnum,
    PaymentMethodTypeEnum,
    PermissionEnum,
    PermissionGroupSortField,
    PluginConfigurationType,
    PluginSortField,
    PostalCodeRuleInclusionTypeEnum,
    ProductAttributeType,
    ProductFieldEnum,
    ProductOrderField,
    ProductTypeConfigurable,
    ProductTypeEnum,
    ProductTypeKindEnum,
    ProductTypeSortField,
    ProductVariantSortField,
    PromotionSortField,
    PromotionTypeEnum,
    RewardTypeEnum,
    RewardValueTypeEnum,
    SaleSortField,
    ShippingMethodTypeEnum,
    StaffMemberStatus,
    StockAvailability,
    StorePaymentMethodEnum,
    TaxCalculationStrategy,
    TaxClassSortField,
    TimePeriodTypeEnum,
    TransactionActionEnum,
    TransactionFlowStrategyEnum,
    UserSortField,
    VoucherDiscountType,
    VoucherSortField,
    VoucherTypeEnum,
    WarehouseClickAndCollectOptionEnum,
    WarehouseSortField,
    WebhookEventTypeAsyncEnum,
    WebhookEventTypeEnum,
    WebhookEventTypeSyncEnum,
    WeightUnitsEnum,
)


class EventDeliveryAttemptSortingInput(BaseModel):
    direction: OrderDirection
    field: EventDeliveryAttemptSortField


class EventDeliverySortingInput(BaseModel):
    direction: OrderDirection
    field: EventDeliverySortField


class EventDeliveryFilterInput(BaseModel):
    status: Optional[EventDeliveryStatusEnum] = None
    eventType: Optional[WebhookEventTypeEnum] = None


class AttributeChoicesSortingInput(BaseModel):
    direction: OrderDirection
    field: AttributeChoicesSortField


class AttributeValueFilterInput(BaseModel):
    search: Optional[str] = None
    ids: Optional[List[str]] = None
    slugs: Optional[List[str]] = None


class AttributeValueWhereInput(BaseModel):
    ids: Optional[List[str]] = None
    name: Optional["StringFilterInput"] = None
    slug: Optional["StringFilterInput"] = None
    AND: Optional[List["AttributeValueWhereInput"]] = None
    OR: Optional[List["AttributeValueWhereInput"]] = None


class StringFilterInput(BaseModel):
    eq: Optional[str] = None
    oneOf: Optional[List[str]] = None


class AttributeFilterInput(BaseModel):
    valueRequired: Optional[bool] = None
    isVariantOnly: Optional[bool] = None
    visibleInStorefront: Optional[bool] = None
    filterableInStorefront: Optional[bool] = None
    filterableInDashboard: Optional[bool] = None
    availableInGrid: Optional[bool] = None
    metadata: Optional[List["MetadataFilter"]] = None
    search: Optional[str] = None
    ids: Optional[List[str]] = None
    type: Optional[AttributeTypeEnum] = None
    inCollection: Optional[str] = None
    inCategory: Optional[str] = None
    slugs: Optional[List[str]] = None
    channel: Optional[str] = None


class MetadataFilter(BaseModel):
    key: str
    value: Optional[str] = None


class AttributeWhereInput(BaseModel):
    metadata: Optional[List["MetadataFilter"]] = None
    ids: Optional[List[str]] = None
    name: Optional["StringFilterInput"] = None
    slug: Optional["StringFilterInput"] = None
    withChoices: Optional[bool] = None
    inputType: Optional["AttributeInputTypeEnumFilterInput"] = None
    entityType: Optional["AttributeEntityTypeEnumFilterInput"] = None
    type: Optional["AttributeTypeEnumFilterInput"] = None
    unit: Optional["MeasurementUnitsEnumFilterInput"] = None
    inCollection: Optional[str] = None
    inCategory: Optional[str] = None
    valueRequired: Optional[bool] = None
    visibleInStorefront: Optional[bool] = None
    filterableInDashboard: Optional[bool] = None
    AND: Optional[List["AttributeWhereInput"]] = None
    OR: Optional[List["AttributeWhereInput"]] = None


class AttributeInputTypeEnumFilterInput(BaseModel):
    eq: Optional[AttributeInputTypeEnum] = None
    oneOf: Optional[List[AttributeInputTypeEnum]] = None


class AttributeEntityTypeEnumFilterInput(BaseModel):
    eq: Optional[AttributeEntityTypeEnum] = None
    oneOf: Optional[List[AttributeEntityTypeEnum]] = None


class AttributeTypeEnumFilterInput(BaseModel):
    eq: Optional[AttributeTypeEnum] = None
    oneOf: Optional[List[AttributeTypeEnum]] = None


class MeasurementUnitsEnumFilterInput(BaseModel):
    eq: Optional[MeasurementUnitsEnum] = None
    oneOf: Optional[List[MeasurementUnitsEnum]] = None


class ProductFilterInput(BaseModel):
    isPublished: Optional[bool] = None
    collections: Optional[List[str]] = None
    categories: Optional[List[str]] = None
    hasCategory: Optional[bool] = None
    attributes: Optional[List["AttributeInput"]] = None
    stockAvailability: Optional[StockAvailability] = None
    stocks: Optional["ProductStockFilterInput"] = None
    search: Optional[str] = None
    metadata: Optional[List["MetadataFilter"]] = None
    publishedFrom: Optional[Any] = None
    isAvailable: Optional[bool] = None
    availableFrom: Optional[Any] = None
    isVisibleInListing: Optional[bool] = None
    price: Optional["PriceRangeInput"] = None
    minimalPrice: Optional["PriceRangeInput"] = None
    updatedAt: Optional["DateTimeRangeInput"] = None
    productTypes: Optional[List[str]] = None
    giftCard: Optional[bool] = None
    ids: Optional[List[str]] = None
    hasPreorderedVariants: Optional[bool] = None
    slugs: Optional[List[str]] = None
    channel: Optional[str] = None


class AttributeInput(BaseModel):
    slug: Optional[str] = None
    value: Optional["AssignedAttributeValueInput"] = None
    values: Optional[List[str]] = None
    valuesRange: Optional["IntRangeInput"] = None
    dateTime: Optional["DateTimeRangeInput"] = None
    date: Optional["DateRangeInput"] = None
    boolean: Optional[bool] = None


class AssignedAttributeValueInput(BaseModel):
    slug: Optional["StringFilterInput"] = None
    name: Optional["StringFilterInput"] = None
    numeric: Optional["DecimalFilterInput"] = None
    date: Optional["DateRangeInput"] = None
    dateTime: Optional["DateTimeRangeInput"] = None
    boolean: Optional[bool] = None
    reference: Optional["AssignedAttributeReferenceInput"] = None


class DecimalFilterInput(BaseModel):
    eq: Optional[Any] = None
    oneOf: Optional[List[Any]] = None
    range: Optional["DecimalRangeInput"] = None


class DecimalRangeInput(BaseModel):
    gte: Optional[Any] = None
    lte: Optional[Any] = None


class DateRangeInput(BaseModel):
    gte: Optional[Any] = None
    lte: Optional[Any] = None


class DateTimeRangeInput(BaseModel):
    gte: Optional[Any] = None
    lte: Optional[Any] = None


class AssignedAttributeReferenceInput(BaseModel):
    referencedIds: Optional["ContainsFilterInput"] = None
    pageSlugs: Optional["ContainsFilterInput"] = None
    productSlugs: Optional["ContainsFilterInput"] = None
    productVariantSkus: Optional["ContainsFilterInput"] = None


class ContainsFilterInput(BaseModel):
    containsAny: Optional[List[str]] = None
    containsAll: Optional[List[str]] = None


class IntRangeInput(BaseModel):
    gte: Optional[int] = None
    lte: Optional[int] = None


class ProductStockFilterInput(BaseModel):
    warehouseIds: Optional[List[str]] = None
    quantity: Optional["IntRangeInput"] = None


class PriceRangeInput(BaseModel):
    gte: Optional[float] = None
    lte: Optional[float] = None


class ProductWhereInput(BaseModel):
    metadata: Optional[List["MetadataFilter"]] = None
    ids: Optional[List[str]] = None
    name: Optional["StringFilterInput"] = None
    slug: Optional["StringFilterInput"] = None
    productType: Optional["GlobalIDFilterInput"] = None
    category: Optional["GlobalIDFilterInput"] = None
    collection: Optional["GlobalIDFilterInput"] = None
    isAvailable: Optional[bool] = None
    isPublished: Optional[bool] = None
    isVisibleInListing: Optional[bool] = None
    publishedFrom: Optional[Any] = None
    availableFrom: Optional[Any] = None
    hasCategory: Optional[bool] = None
    price: Optional["DecimalFilterInput"] = None
    minimalPrice: Optional["DecimalFilterInput"] = None
    attributes: Optional[List["AttributeInput"]] = None
    stockAvailability: Optional[StockAvailability] = None
    stocks: Optional["ProductStockFilterInput"] = None
    giftCard: Optional[bool] = None
    hasPreorderedVariants: Optional[bool] = None
    updatedAt: Optional["DateTimeFilterInput"] = None
    AND: Optional[List["ProductWhereInput"]] = None
    OR: Optional[List["ProductWhereInput"]] = None


class GlobalIDFilterInput(BaseModel):
    eq: Optional[str] = None
    oneOf: Optional[List[str]] = None


class DateTimeFilterInput(BaseModel):
    eq: Optional[Any] = None
    oneOf: Optional[List[Any]] = None
    range: Optional["DateTimeRangeInput"] = None


class ProductOrder(BaseModel):
    direction: OrderDirection
    channel: Optional[str] = None
    attributeId: Optional[str] = None
    field: Optional[ProductOrderField] = None


class AddressInput(BaseModel):
    firstName: Optional[str] = None
    lastName: Optional[str] = None
    companyName: Optional[str] = None
    streetAddress1: Optional[str] = None
    streetAddress2: Optional[str] = None
    city: Optional[str] = None
    cityArea: Optional[str] = None
    postalCode: Optional[str] = None
    country: Optional[CountryCode] = None
    countryArea: Optional[str] = None
    phone: Optional[str] = None
    metadata: Optional[List["MetadataInput"]] = None
    skipValidation: Optional[bool] = None


class MetadataInput(BaseModel):
    key: str
    value: str


class ProductVariantFilterInput(BaseModel):
    search: Optional[str] = None
    sku: Optional[List[str]] = None
    metadata: Optional[List["MetadataFilter"]] = None
    isPreorder: Optional[bool] = None
    updatedAt: Optional["DateTimeRangeInput"] = None


class ProductVariantWhereInput(BaseModel):
    metadata: Optional[List["MetadataFilter"]] = None
    ids: Optional[List[str]] = None
    sku: Optional["StringFilterInput"] = None
    updatedAt: Optional["DateTimeRangeInput"] = None
    attributes: Optional[List["AssignedAttributeWhereInput"]] = None
    AND: Optional[List["ProductVariantWhereInput"]] = None
    OR: Optional[List["ProductVariantWhereInput"]] = None


class AssignedAttributeWhereInput(BaseModel):
    slug: Optional[str] = None
    value: Optional["AssignedAttributeValueInput"] = None


class ProductVariantSortingInput(BaseModel):
    direction: OrderDirection
    field: ProductVariantSortField


class MediaSortingInput(BaseModel):
    direction: OrderDirection
    field: MediaChoicesSortField


class WarehouseFilterInput(BaseModel):
    clickAndCollectOption: Optional[WarehouseClickAndCollectOptionEnum] = None
    metadata: Optional[List["MetadataFilter"]] = None
    search: Optional[str] = None
    ids: Optional[List[str]] = None
    isPrivate: Optional[bool] = None
    channels: Optional[List[str]] = None
    slugs: Optional[List[str]] = None


class WarehouseSortingInput(BaseModel):
    direction: OrderDirection
    field: WarehouseSortField


class TaxConfigurationFilterInput(BaseModel):
    metadata: Optional[List["MetadataFilter"]] = None
    ids: Optional[List[str]] = None


class TaxClassSortingInput(BaseModel):
    direction: OrderDirection
    field: TaxClassSortField


class TaxClassFilterInput(BaseModel):
    metadata: Optional[List["MetadataFilter"]] = None
    ids: Optional[List[str]] = None
    countries: Optional[List[CountryCode]] = None


class StockFilterInput(BaseModel):
    quantity: Optional[float] = None
    search: Optional[str] = None


class CountryFilterInput(BaseModel):
    attachedToShippingZones: Optional[bool] = None


class GiftCardEventFilterInput(BaseModel):
    type: Optional[GiftCardEventsEnum] = None
    orders: Optional[List[str]] = None


class ShippingZoneFilterInput(BaseModel):
    search: Optional[str] = None
    channels: Optional[List[str]] = None


class CategoryFilterInput(BaseModel):
    search: Optional[str] = None
    metadata: Optional[List["MetadataFilter"]] = None
    ids: Optional[List[str]] = None
    slugs: Optional[List[str]] = None
    updatedAt: Optional["DateTimeRangeInput"] = None


class CategoryWhereInput(BaseModel):
    metadata: Optional[List["MetadataFilter"]] = None
    ids: Optional[List[str]] = None
    AND: Optional[List["CategoryWhereInput"]] = None
    OR: Optional[List["CategoryWhereInput"]] = None


class CategorySortingInput(BaseModel):
    direction: OrderDirection
    channel: Optional[str] = None
    field: CategorySortField


class CollectionFilterInput(BaseModel):
    published: Optional[CollectionPublished] = None
    search: Optional[str] = None
    metadata: Optional[List["MetadataFilter"]] = None
    ids: Optional[List[str]] = None
    slugs: Optional[List[str]] = None
    channel: Optional[str] = None


class CollectionWhereInput(BaseModel):
    metadata: Optional[List["MetadataFilter"]] = None
    ids: Optional[List[str]] = None
    AND: Optional[List["CollectionWhereInput"]] = None
    OR: Optional[List["CollectionWhereInput"]] = None


class CollectionSortingInput(BaseModel):
    direction: OrderDirection
    channel: Optional[str] = None
    field: CollectionSortField


class ProductTypeFilterInput(BaseModel):
    search: Optional[str] = None
    configurable: Optional[ProductTypeConfigurable] = None
    productType: Optional[ProductTypeEnum] = None
    metadata: Optional[List["MetadataFilter"]] = None
    kind: Optional[ProductTypeKindEnum] = None
    ids: Optional[List[str]] = None
    slugs: Optional[List[str]] = None


class ProductTypeSortingInput(BaseModel):
    direction: OrderDirection
    field: ProductTypeSortField


class PaymentFilterInput(BaseModel):
    ids: Optional[List[str]] = None
    checkouts: Optional[List[str]] = None


class PageSortingInput(BaseModel):
    direction: OrderDirection
    field: PageSortField


class PageFilterInput(BaseModel):
    search: Optional[str] = None
    metadata: Optional[List["MetadataFilter"]] = None
    pageTypes: Optional[List[str]] = None
    ids: Optional[List[str]] = None
    slugs: Optional[List[str]] = None


class PageWhereInput(BaseModel):
    metadata: Optional["MetadataFilterInput"] = None
    ids: Optional[List[str]] = None
    slug: Optional["StringFilterInput"] = None
    pageType: Optional["GlobalIDFilterInput"] = None
    attributes: Optional[List["AssignedAttributeWhereInput"]] = None
    AND: Optional[List["PageWhereInput"]] = None
    OR: Optional[List["PageWhereInput"]] = None


class MetadataFilterInput(BaseModel):
    key: str
    value: Optional["MetadataValueFilterInput"] = None


class MetadataValueFilterInput(BaseModel):
    eq: Optional[str] = None
    oneOf: Optional[List[str]] = None


class PageTypeSortingInput(BaseModel):
    direction: OrderDirection
    field: PageTypeSortField


class PageTypeFilterInput(BaseModel):
    search: Optional[str] = None
    slugs: Optional[List[str]] = None


class OrderSortingInput(BaseModel):
    direction: OrderDirection
    field: OrderSortField


class OrderFilterInput(BaseModel):
    paymentStatus: Optional[List[PaymentChargeStatusEnum]] = None
    status: Optional[List[OrderStatusFilter]] = None
    customer: Optional[str] = None
    created: Optional["DateRangeInput"] = None
    search: Optional[str] = None
    metadata: Optional[List["MetadataFilter"]] = None
    channels: Optional[List[str]] = None
    authorizeStatus: Optional[List[OrderAuthorizeStatusEnum]] = None
    chargeStatus: Optional[List[OrderChargeStatusEnum]] = None
    updatedAt: Optional["DateTimeRangeInput"] = None
    isClickAndCollect: Optional[bool] = None
    isPreorder: Optional[bool] = None
    ids: Optional[List[str]] = None
    checkoutTokens: Optional[List[Any]] = None
    giftCardUsed: Optional[bool] = None
    giftCardBought: Optional[bool] = None
    numbers: Optional[List[str]] = None
    checkoutIds: Optional[List[str]] = None


class OrderWhereInput(BaseModel):
    metadata: Optional["MetadataFilterInput"] = None
    ids: Optional[List[str]] = None
    number: Optional["IntFilterInput"] = None
    channelId: Optional["GlobalIDFilterInput"] = None
    createdAt: Optional["DateTimeRangeInput"] = None
    updatedAt: Optional["DateTimeRangeInput"] = None
    user: Optional["GlobalIDFilterInput"] = None
    userEmail: Optional["StringFilterInput"] = None
    authorizeStatus: Optional["OrderAuthorizeStatusEnumFilterInput"] = None
    chargeStatus: Optional["OrderChargeStatusEnumFilterInput"] = None
    status: Optional["OrderStatusEnumFilterInput"] = None
    checkoutToken: Optional["UUIDFilterInput"] = None
    checkoutId: Optional["GlobalIDFilterInput"] = None
    isClickAndCollect: Optional[bool] = None
    isGiftCardUsed: Optional[bool] = None
    isGiftCardBought: Optional[bool] = None
    voucherCode: Optional["StringFilterInput"] = None
    hasInvoices: Optional[bool] = None
    invoices: Optional[List["InvoiceFilterInput"]] = None
    hasFulfillments: Optional[bool] = None
    fulfillments: Optional[List["FulfillmentFilterInput"]] = None
    lines: Optional[List["LinesFilterInput"]] = None
    linesCount: Optional["IntFilterInput"] = None
    transactions: Optional[List["TransactionFilterInput"]] = None
    totalGross: Optional["PriceFilterInput"] = None
    totalNet: Optional["PriceFilterInput"] = None
    productTypeId: Optional["GlobalIDFilterInput"] = None
    events: Optional[List["OrderEventFilterInput"]] = None
    billingAddress: Optional["AddressFilterInput"] = None
    shippingAddress: Optional["AddressFilterInput"] = None
    AND: Optional[List["OrderWhereInput"]] = None
    OR: Optional[List["OrderWhereInput"]] = None


class IntFilterInput(BaseModel):
    eq: Optional[int] = None
    oneOf: Optional[List[int]] = None
    range: Optional["IntRangeInput"] = None


class OrderAuthorizeStatusEnumFilterInput(BaseModel):
    eq: Optional[OrderAuthorizeStatusEnum] = None
    oneOf: Optional[List[OrderAuthorizeStatusEnum]] = None


class OrderChargeStatusEnumFilterInput(BaseModel):
    eq: Optional[OrderChargeStatusEnum] = None
    oneOf: Optional[List[OrderChargeStatusEnum]] = None


class OrderStatusEnumFilterInput(BaseModel):
    eq: Optional[OrderStatus] = None
    oneOf: Optional[List[OrderStatus]] = None


class UUIDFilterInput(BaseModel):
    eq: Optional[Any] = None
    oneOf: Optional[List[Any]] = None


class InvoiceFilterInput(BaseModel):
    createdAt: Optional["DateTimeRangeInput"] = None


class FulfillmentFilterInput(BaseModel):
    status: Optional["FulfillmentStatusEnumFilterInput"] = None
    metadata: Optional["MetadataFilterInput"] = None
    warehouse: Optional["FulfillmentWarehouseFilterInput"] = None


class FulfillmentStatusEnumFilterInput(BaseModel):
    eq: Optional[FulfillmentStatus] = None
    oneOf: Optional[List[FulfillmentStatus]] = None


class FulfillmentWarehouseFilterInput(BaseModel):
    id: Optional["GlobalIDFilterInput"] = None
    slug: Optional["StringFilterInput"] = None
    externalReference: Optional["StringFilterInput"] = None


class LinesFilterInput(BaseModel):
    metadata: Optional["MetadataFilterInput"] = None


class TransactionFilterInput(BaseModel):
    paymentMethodDetails: Optional["PaymentMethodDetailsFilterInput"] = None
    metadata: Optional["MetadataFilterInput"] = None


class PaymentMethodDetailsFilterInput(BaseModel):
    type: Optional["PaymentMethodTypeEnumFilterInput"] = None
    card: Optional["PaymentMethodDetailsCardFilterInput"] = None


class PaymentMethodTypeEnumFilterInput(BaseModel):
    eq: Optional[PaymentMethodTypeEnum] = None
    oneOf: Optional[List[PaymentMethodTypeEnum]] = None


class PaymentMethodDetailsCardFilterInput(BaseModel):
    brand: Optional["StringFilterInput"] = None


class PriceFilterInput(BaseModel):
    currency: Optional[str] = None
    amount: "DecimalFilterInput"


class OrderEventFilterInput(BaseModel):
    date: Optional["DateTimeRangeInput"] = None
    type: Optional["OrderEventTypeEnumFilterInput"] = None


class OrderEventTypeEnumFilterInput(BaseModel):
    eq: Optional[OrderEventsEnum] = None
    oneOf: Optional[List[OrderEventsEnum]] = None


class AddressFilterInput(BaseModel):
    phoneNumber: Optional["StringFilterInput"] = None
    country: Optional["CountryCodeEnumFilterInput"] = None


class CountryCodeEnumFilterInput(BaseModel):
    eq: Optional[CountryCode] = None
    oneOf: Optional[List[CountryCode]] = None
    notOneOf: Optional[List[CountryCode]] = None


class OrderDraftFilterInput(BaseModel):
    customer: Optional[str] = None
    created: Optional["DateRangeInput"] = None
    search: Optional[str] = None
    metadata: Optional[List["MetadataFilter"]] = None
    channels: Optional[List[str]] = None


class DraftOrderWhereInput(BaseModel):
    metadata: Optional["MetadataFilterInput"] = None
    ids: Optional[List[str]] = None
    number: Optional["IntFilterInput"] = None
    channelId: Optional["GlobalIDFilterInput"] = None
    createdAt: Optional["DateTimeRangeInput"] = None
    updatedAt: Optional["DateTimeRangeInput"] = None
    user: Optional["GlobalIDFilterInput"] = None
    userEmail: Optional["StringFilterInput"] = None
    authorizeStatus: Optional["OrderAuthorizeStatusEnumFilterInput"] = None
    chargeStatus: Optional["OrderChargeStatusEnumFilterInput"] = None
    isClickAndCollect: Optional[bool] = None
    voucherCode: Optional["StringFilterInput"] = None
    lines: Optional[List["LinesFilterInput"]] = None
    linesCount: Optional["IntFilterInput"] = None
    transactions: Optional[List["TransactionFilterInput"]] = None
    totalGross: Optional["PriceFilterInput"] = None
    totalNet: Optional["PriceFilterInput"] = None
    productTypeId: Optional["GlobalIDFilterInput"] = None
    events: Optional[List["OrderEventFilterInput"]] = None
    billingAddress: Optional["AddressFilterInput"] = None
    shippingAddress: Optional["AddressFilterInput"] = None
    AND: Optional[List["DraftOrderWhereInput"]] = None
    OR: Optional[List["DraftOrderWhereInput"]] = None


class MenuSortingInput(BaseModel):
    direction: OrderDirection
    field: MenuSortField


class MenuFilterInput(BaseModel):
    search: Optional[str] = None
    slug: Optional[List[str]] = None
    metadata: Optional[List["MetadataFilter"]] = None
    slugs: Optional[List[str]] = None


class MenuItemSortingInput(BaseModel):
    direction: OrderDirection
    field: MenuItemsSortField


class MenuItemFilterInput(BaseModel):
    search: Optional[str] = None
    metadata: Optional[List["MetadataFilter"]] = None


class GiftCardSortingInput(BaseModel):
    direction: OrderDirection
    field: GiftCardSortField


class GiftCardFilterInput(BaseModel):
    isActive: Optional[bool] = None
    metadata: Optional[List["MetadataFilter"]] = None
    tags: Optional[List[str]] = None
    products: Optional[List[str]] = None
    usedBy: Optional[List[str]] = None
    used: Optional[bool] = None
    currency: Optional[str] = None
    currentBalance: Optional["PriceRangeInput"] = None
    initialBalance: Optional["PriceRangeInput"] = None
    code: Optional[str] = None
    createdByEmail: Optional[str] = None


class GiftCardTagFilterInput(BaseModel):
    search: Optional[str] = None


class PluginFilterInput(BaseModel):
    statusInChannels: Optional["PluginStatusInChannelsInput"] = None
    search: Optional[str] = None
    type: Optional[PluginConfigurationType] = None


class PluginStatusInChannelsInput(BaseModel):
    active: bool
    channels: List[str]


class PluginSortingInput(BaseModel):
    direction: OrderDirection
    field: PluginSortField


class SaleFilterInput(BaseModel):
    status: Optional[List[DiscountStatusEnum]] = None
    saleType: Optional[DiscountValueTypeEnum] = None
    started: Optional["DateTimeRangeInput"] = None
    search: Optional[str] = None
    metadata: Optional[List["MetadataFilter"]] = None
    updatedAt: Optional["DateTimeRangeInput"] = None


class SaleSortingInput(BaseModel):
    direction: OrderDirection
    channel: Optional[str] = None
    field: SaleSortField


class VoucherFilterInput(BaseModel):
    status: Optional[List[DiscountStatusEnum]] = None
    timesUsed: Optional["IntRangeInput"] = None
    discountType: Optional[List[VoucherDiscountType]] = None
    started: Optional["DateTimeRangeInput"] = None
    search: Optional[str] = None
    metadata: Optional[List["MetadataFilter"]] = None
    ids: Optional[List[str]] = None


class VoucherSortingInput(BaseModel):
    direction: OrderDirection
    channel: Optional[str] = None
    field: VoucherSortField


class PromotionWhereInput(BaseModel):
    metadata: Optional[List["MetadataFilter"]] = None
    ids: Optional[List[str]] = None
    name: Optional["StringFilterInput"] = None
    endDate: Optional["DateTimeFilterInput"] = None
    startDate: Optional["DateTimeFilterInput"] = None
    isOldSale: Optional[bool] = None
    type: Optional["PromotionTypeEnumFilterInput"] = None
    AND: Optional[List["PromotionWhereInput"]] = None
    OR: Optional[List["PromotionWhereInput"]] = None


class PromotionTypeEnumFilterInput(BaseModel):
    eq: Optional[PromotionTypeEnum] = None
    oneOf: Optional[List[PromotionTypeEnum]] = None


class PromotionSortingInput(BaseModel):
    direction: OrderDirection
    field: PromotionSortField


class ExportFileFilterInput(BaseModel):
    createdAt: Optional["DateTimeRangeInput"] = None
    updatedAt: Optional["DateTimeRangeInput"] = None
    status: Optional[JobStatusEnum] = None
    user: Optional[str] = None
    app: Optional[str] = None


class ExportFileSortingInput(BaseModel):
    direction: OrderDirection
    field: ExportFileSortField


class CheckoutSortingInput(BaseModel):
    direction: OrderDirection
    field: CheckoutSortField


class CheckoutFilterInput(BaseModel):
    customer: Optional[str] = None
    created: Optional["DateRangeInput"] = None
    search: Optional[str] = None
    metadata: Optional[List["MetadataFilter"]] = None
    channels: Optional[List[str]] = None
    updatedAt: Optional["DateRangeInput"] = None
    authorizeStatus: Optional[List[CheckoutAuthorizeStatusEnum]] = None
    chargeStatus: Optional[List[CheckoutChargeStatusEnum]] = None


class AttributeSortingInput(BaseModel):
    direction: OrderDirection
    field: AttributeSortField


class AppFilterInput(BaseModel):
    search: Optional[str] = None
    isActive: Optional[bool] = None
    type: Optional[AppTypeEnum] = None


class AppSortingInput(BaseModel):
    direction: OrderDirection
    field: AppSortField


class AppExtensionFilterInput(BaseModel):
    mount: Optional[List[AppExtensionMountEnum]] = None
    target: Optional[AppExtensionTargetEnum] = None


class CustomerFilterInput(BaseModel):
    dateJoined: Optional["DateRangeInput"] = None
    numberOfOrders: Optional["IntRangeInput"] = None
    placedOrders: Optional["DateRangeInput"] = None
    search: Optional[str] = None
    metadata: Optional[List["MetadataFilter"]] = None
    ids: Optional[List[str]] = None
    updatedAt: Optional["DateTimeRangeInput"] = None


class CustomerWhereInput(BaseModel):
    metadata: Optional["MetadataFilterInput"] = None
    ids: Optional[List[str]] = None
    email: Optional["StringFilterInput"] = None
    firstName: Optional["StringFilterInput"] = None
    lastName: Optional["StringFilterInput"] = None
    isActive: Optional[bool] = None
    dateJoined: Optional["DateTimeRangeInput"] = None
    updatedAt: Optional["DateTimeRangeInput"] = None
    placedOrdersAt: Optional["DateTimeRangeInput"] = None
    addresses: Optional["AddressFilterInput"] = None
    numberOfOrders: Optional["IntFilterInput"] = None
    AND: Optional[List["CustomerWhereInput"]] = None
    OR: Optional[List["CustomerWhereInput"]] = None


class UserSortingInput(BaseModel):
    direction: OrderDirection
    field: UserSortField


class PermissionGroupFilterInput(BaseModel):
    search: Optional[str] = None
    ids: Optional[List[str]] = None


class PermissionGroupSortingInput(BaseModel):
    direction: OrderDirection
    field: PermissionGroupSortField


class StaffUserInput(BaseModel):
    status: Optional[StaffMemberStatus] = None
    search: Optional[str] = None
    ids: Optional[List[str]] = None


class WebhookCreateInput(BaseModel):
    name: Optional[str] = None
    targetUrl: Optional[str] = None
    events: Optional[List[WebhookEventTypeEnum]] = None
    asyncEvents: Optional[List[WebhookEventTypeAsyncEnum]] = None
    syncEvents: Optional[List[WebhookEventTypeSyncEnum]] = None
    app: Optional[str] = None
    isActive: Optional[bool] = None
    secretKey: Optional[str] = None
    query: Optional[str] = None
    customHeaders: Optional[Any] = None


class WebhookUpdateInput(BaseModel):
    name: Optional[str] = None
    targetUrl: Optional[str] = None
    events: Optional[List[WebhookEventTypeEnum]] = None
    asyncEvents: Optional[List[WebhookEventTypeAsyncEnum]] = None
    syncEvents: Optional[List[WebhookEventTypeSyncEnum]] = None
    app: Optional[str] = None
    isActive: Optional[bool] = None
    secretKey: Optional[str] = None
    query: Optional[str] = None
    customHeaders: Optional[Any] = None


class WarehouseCreateInput(BaseModel):
    slug: Optional[str] = None
    email: Optional[str] = None
    externalReference: Optional[str] = None
    name: str
    address: "AddressInput"
    shippingZones: Optional[List[str]] = None


class WarehouseUpdateInput(BaseModel):
    slug: Optional[str] = None
    email: Optional[str] = None
    externalReference: Optional[str] = None
    name: Optional[str] = None
    address: Optional["AddressInput"] = None
    clickAndCollectOption: Optional[WarehouseClickAndCollectOptionEnum] = None
    isPrivate: Optional[bool] = None


class TaxClassCreateInput(BaseModel):
    name: str
    createCountryRates: Optional[List["CountryRateInput"]] = None


class CountryRateInput(BaseModel):
    countryCode: CountryCode
    rate: float


class TaxClassUpdateInput(BaseModel):
    name: Optional[str] = None
    updateCountryRates: Optional[List["CountryRateUpdateInput"]] = None
    removeCountryRates: Optional[List[CountryCode]] = None


class CountryRateUpdateInput(BaseModel):
    countryCode: CountryCode
    rate: Optional[float] = None


class TaxConfigurationUpdateInput(BaseModel):
    chargeTaxes: Optional[bool] = None
    taxCalculationStrategy: Optional[TaxCalculationStrategy] = None
    displayGrossPrices: Optional[bool] = None
    pricesEnteredWithTax: Optional[bool] = None
    updateCountriesConfiguration: Optional[List["TaxConfigurationPerCountryInput"]] = (
        None
    )
    removeCountriesConfiguration: Optional[List[CountryCode]] = None
    useWeightedTaxForShipping: Optional[bool] = None
    taxAppId: Optional[str] = None


class TaxConfigurationPerCountryInput(BaseModel):
    countryCode: CountryCode
    chargeTaxes: bool
    taxCalculationStrategy: Optional[TaxCalculationStrategy] = None
    displayGrossPrices: bool
    taxAppId: Optional[str] = None
    useWeightedTaxForShipping: Optional[bool] = None


class TaxClassRateInput(BaseModel):
    taxClassId: Optional[str] = None
    rate: Optional[float] = None


class StockBulkUpdateInput(BaseModel):
    variantId: Optional[str] = None
    variantExternalReference: Optional[str] = None
    warehouseId: Optional[str] = None
    warehouseExternalReference: Optional[str] = None
    quantity: int


class StaffNotificationRecipientInput(BaseModel):
    user: Optional[str] = None
    email: Optional[str] = None
    active: Optional[bool] = None


class SiteDomainInput(BaseModel):
    domain: Optional[str] = None
    name: Optional[str] = None


class ShopSettingsInput(BaseModel):
    headerText: Optional[str] = None
    description: Optional[str] = None
    trackInventoryByDefault: Optional[bool] = None
    defaultWeightUnit: Optional[WeightUnitsEnum] = None
    automaticFulfillmentDigitalProducts: Optional[bool] = None
    fulfillmentAutoApprove: Optional[bool] = None
    fulfillmentAllowUnpaid: Optional[bool] = None
    defaultDigitalMaxDownloads: Optional[int] = None
    defaultDigitalUrlValidDays: Optional[int] = None
    defaultMailSenderName: Optional[str] = None
    defaultMailSenderAddress: Optional[str] = None
    customerSetPasswordUrl: Optional[str] = None
    reserveStockDurationAnonymousUser: Optional[int] = None
    reserveStockDurationAuthenticatedUser: Optional[int] = None
    limitQuantityPerCheckout: Optional[int] = None
    enableAccountConfirmationByEmail: Optional[bool] = None
    allowLoginWithoutConfirmation: Optional[bool] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None
    includeTaxesInPrices: Optional[bool] = None
    displayGrossPrices: Optional[bool] = None
    chargeTaxesOnShipping: Optional[bool] = None


class ShopSettingsTranslationInput(BaseModel):
    headerText: Optional[str] = None
    description: Optional[str] = None


class OrderSettingsUpdateInput(BaseModel):
    automaticallyConfirmAllNewOrders: Optional[bool] = None
    automaticallyFulfillNonShippableGiftCard: Optional[bool] = None


class GiftCardSettingsUpdateInput(BaseModel):
    expiryType: Optional[GiftCardSettingsExpiryTypeEnum] = None
    expiryPeriod: Optional["TimePeriodInputType"] = None


class TimePeriodInputType(BaseModel):
    amount: int
    type: TimePeriodTypeEnum


class ShippingMethodChannelListingInput(BaseModel):
    addChannels: Optional[List["ShippingMethodChannelListingAddInput"]] = None
    removeChannels: Optional[List[str]] = None


class ShippingMethodChannelListingAddInput(BaseModel):
    channelId: str
    price: Optional[Any] = None
    minimumOrderPrice: Optional[Any] = None
    maximumOrderPrice: Optional[Any] = None


class ShippingPriceInput(BaseModel):
    name: Optional[str] = None
    description: Optional[Any] = None
    minimumOrderWeight: Optional[Any] = None
    maximumOrderWeight: Optional[Any] = None
    maximumDeliveryDays: Optional[int] = None
    minimumDeliveryDays: Optional[int] = None
    type: Optional[ShippingMethodTypeEnum] = None
    shippingZone: Optional[str] = None
    addPostalCodeRules: Optional[List["ShippingPostalCodeRulesCreateInputRange"]] = None
    deletePostalCodeRules: Optional[List[str]] = None
    inclusionType: Optional[PostalCodeRuleInclusionTypeEnum] = None
    taxClass: Optional[str] = None


class ShippingPostalCodeRulesCreateInputRange(BaseModel):
    start: str
    end: Optional[str] = None


class ShippingPriceTranslationInput(BaseModel):
    name: Optional[str] = None
    description: Optional[Any] = None


class ShippingPriceExcludeProductsInput(BaseModel):
    products: List[str]


class ShippingZoneCreateInput(BaseModel):
    name: Optional[str] = None
    description: Optional[str] = None
    countries: Optional[List[str]] = None
    default: Optional[bool] = None
    addWarehouses: Optional[List[str]] = None
    addChannels: Optional[List[str]] = None


class ShippingZoneUpdateInput(BaseModel):
    name: Optional[str] = None
    description: Optional[str] = None
    countries: Optional[List[str]] = None
    default: Optional[bool] = None
    addWarehouses: Optional[List[str]] = None
    addChannels: Optional[List[str]] = None
    removeWarehouses: Optional[List[str]] = None
    removeChannels: Optional[List[str]] = None


class ProductAttributeAssignInput(BaseModel):
    id: str
    type: ProductAttributeType
    variantSelection: Optional[bool] = None


class ProductAttributeAssignmentUpdateInput(BaseModel):
    id: str
    variantSelection: bool


class CategoryInput(BaseModel):
    description: Optional[Any] = None
    name: Optional[str] = None
    slug: Optional[str] = None
    seo: Optional["SeoInput"] = None
    backgroundImage: Optional[Upload] = None
    backgroundImageAlt: Optional[str] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None


class SeoInput(BaseModel):
    title: Optional[str] = None
    description: Optional[str] = None


class TranslationInput(BaseModel):
    slug: Optional[str] = None
    seoTitle: Optional[str] = None
    seoDescription: Optional[str] = None
    name: Optional[str] = None
    description: Optional[Any] = None


class CollectionCreateInput(BaseModel):
    isPublished: Optional[bool] = None
    name: Optional[str] = None
    slug: Optional[str] = None
    description: Optional[Any] = None
    backgroundImage: Optional[Upload] = None
    backgroundImageAlt: Optional[str] = None
    seo: Optional["SeoInput"] = None
    publicationDate: Optional[Any] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None
    products: Optional[List[str]] = None


class MoveProductInput(BaseModel):
    productId: str
    sortOrder: Optional[int] = None


class CollectionInput(BaseModel):
    isPublished: Optional[bool] = None
    name: Optional[str] = None
    slug: Optional[str] = None
    description: Optional[Any] = None
    backgroundImage: Optional[Upload] = None
    backgroundImageAlt: Optional[str] = None
    seo: Optional["SeoInput"] = None
    publicationDate: Optional[Any] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None


class CollectionChannelListingUpdateInput(BaseModel):
    addChannels: Optional[List["PublishableChannelListingInput"]] = None
    removeChannels: Optional[List[str]] = None


class PublishableChannelListingInput(BaseModel):
    channelId: str
    isPublished: Optional[bool] = None
    publicationDate: Optional[Any] = None
    publishedAt: Optional[Any] = None


class ProductCreateInput(BaseModel):
    attributes: Optional[List["AttributeValueInput"]] = None
    category: Optional[str] = None
    chargeTaxes: Optional[bool] = None
    collections: Optional[List[str]] = None
    description: Optional[Any] = None
    name: Optional[str] = None
    slug: Optional[str] = None
    taxClass: Optional[str] = None
    taxCode: Optional[str] = None
    seo: Optional["SeoInput"] = None
    weight: Optional[Any] = None
    rating: Optional[float] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None
    externalReference: Optional[str] = None
    productType: str


class AttributeValueInput(BaseModel):
    id: Optional[str] = None
    externalReference: Optional[str] = None
    values: Optional[List[str]] = None
    dropdown: Optional["AttributeValueSelectableTypeInput"] = None
    swatch: Optional["AttributeValueSelectableTypeInput"] = None
    multiselect: Optional[List["AttributeValueSelectableTypeInput"]] = None
    numeric: Optional[str] = None
    file: Optional[str] = None
    contentType: Optional[str] = None
    reference: Optional[str] = None
    references: Optional[List[str]] = None
    richText: Optional[Any] = None
    plainText: Optional[str] = None
    boolean: Optional[bool] = None
    date: Optional[Any] = None
    dateTime: Optional[Any] = None


class AttributeValueSelectableTypeInput(BaseModel):
    id: Optional[str] = None
    externalReference: Optional[str] = None
    value: Optional[str] = None


class ProductBulkCreateInput(BaseModel):
    attributes: Optional[List["AttributeValueInput"]] = None
    category: Optional[str] = None
    chargeTaxes: Optional[bool] = None
    collections: Optional[List[str]] = None
    description: Optional[Any] = None
    name: Optional[str] = None
    slug: Optional[str] = None
    taxClass: Optional[str] = None
    taxCode: Optional[str] = None
    seo: Optional["SeoInput"] = None
    weight: Optional[Any] = None
    rating: Optional[float] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None
    externalReference: Optional[str] = None
    productType: str
    media: Optional[List["MediaInput"]] = None
    channelListings: Optional[List["ProductChannelListingCreateInput"]] = None
    variants: Optional[List["ProductVariantBulkCreateInput"]] = None


class MediaInput(BaseModel):
    alt: Optional[str] = None
    image: Optional[Upload] = None
    mediaUrl: Optional[str] = None


class ProductChannelListingCreateInput(BaseModel):
    channelId: str
    isPublished: Optional[bool] = None
    publishedAt: Optional[Any] = None
    visibleInListings: Optional[bool] = None
    isAvailableForPurchase: Optional[bool] = None
    availableForPurchaseAt: Optional[Any] = None


class ProductVariantBulkCreateInput(BaseModel):
    attributes: List["BulkAttributeValueInput"]
    sku: Optional[str] = None
    name: Optional[str] = None
    trackInventory: Optional[bool] = None
    weight: Optional[Any] = None
    preorder: Optional["PreorderSettingsInput"] = None
    quantityLimitPerCustomer: Optional[int] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None
    externalReference: Optional[str] = None
    stocks: Optional[List["StockInput"]] = None
    channelListings: Optional[List["ProductVariantChannelListingAddInput"]] = None


class BulkAttributeValueInput(BaseModel):
    id: Optional[str] = None
    externalReference: Optional[str] = None
    values: Optional[List[str]] = None
    dropdown: Optional["AttributeValueSelectableTypeInput"] = None
    swatch: Optional["AttributeValueSelectableTypeInput"] = None
    multiselect: Optional[List["AttributeValueSelectableTypeInput"]] = None
    numeric: Optional[str] = None
    file: Optional[str] = None
    contentType: Optional[str] = None
    reference: Optional[str] = None
    references: Optional[List[str]] = None
    richText: Optional[Any] = None
    plainText: Optional[str] = None
    boolean: Optional[bool] = None
    date: Optional[Any] = None
    dateTime: Optional[Any] = None


class PreorderSettingsInput(BaseModel):
    globalThreshold: Optional[int] = None
    endDate: Optional[Any] = None


class StockInput(BaseModel):
    warehouse: str
    quantity: int


class ProductVariantChannelListingAddInput(BaseModel):
    channelId: str
    price: Any
    costPrice: Optional[Any] = None
    priorPrice: Optional[Any] = None
    preorderThreshold: Optional[int] = None


class ProductInput(BaseModel):
    attributes: Optional[List["AttributeValueInput"]] = None
    category: Optional[str] = None
    chargeTaxes: Optional[bool] = None
    collections: Optional[List[str]] = None
    description: Optional[Any] = None
    name: Optional[str] = None
    slug: Optional[str] = None
    taxClass: Optional[str] = None
    taxCode: Optional[str] = None
    seo: Optional["SeoInput"] = None
    weight: Optional[Any] = None
    rating: Optional[float] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None
    externalReference: Optional[str] = None


class ProductBulkTranslateInput(BaseModel):
    id: Optional[str] = None
    externalReference: Optional[str] = None
    languageCode: LanguageCodeEnum
    translationFields: "TranslationInput"


class ProductChannelListingUpdateInput(BaseModel):
    updateChannels: Optional[List["ProductChannelListingAddInput"]] = None
    removeChannels: Optional[List[str]] = None


class ProductChannelListingAddInput(BaseModel):
    channelId: str
    isPublished: Optional[bool] = None
    publicationDate: Optional[Any] = None
    publishedAt: Optional[Any] = None
    visibleInListings: Optional[bool] = None
    isAvailableForPurchase: Optional[bool] = None
    availableForPurchaseDate: Optional[Any] = None
    availableForPurchaseAt: Optional[Any] = None
    addVariants: Optional[List[str]] = None
    removeVariants: Optional[List[str]] = None


class ProductMediaCreateInput(BaseModel):
    alt: Optional[str] = None
    image: Optional[Upload] = None
    product: str
    mediaUrl: Optional[str] = None


class ReorderInput(BaseModel):
    id: str
    sortOrder: Optional[int] = None


class ProductMediaUpdateInput(BaseModel):
    alt: Optional[str] = None


class ProductTypeInput(BaseModel):
    name: Optional[str] = None
    slug: Optional[str] = None
    kind: Optional[ProductTypeKindEnum] = None
    hasVariants: Optional[bool] = None
    productAttributes: Optional[List[str]] = None
    variantAttributes: Optional[List[str]] = None
    isShippingRequired: Optional[bool] = None
    isDigital: Optional[bool] = None
    weight: Optional[Any] = None
    taxCode: Optional[str] = None
    taxClass: Optional[str] = None


class DigitalContentUploadInput(BaseModel):
    useDefaultSettings: bool
    maxDownloads: Optional[int] = None
    urlValidDays: Optional[int] = None
    automaticFulfillment: Optional[bool] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None
    contentFile: Upload


class DigitalContentInput(BaseModel):
    useDefaultSettings: bool
    maxDownloads: Optional[int] = None
    urlValidDays: Optional[int] = None
    automaticFulfillment: Optional[bool] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None


class DigitalContentUrlCreateInput(BaseModel):
    content: str


class ProductVariantCreateInput(BaseModel):
    attributes: List["AttributeValueInput"]
    sku: Optional[str] = None
    name: Optional[str] = None
    trackInventory: Optional[bool] = None
    weight: Optional[Any] = None
    preorder: Optional["PreorderSettingsInput"] = None
    quantityLimitPerCustomer: Optional[int] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None
    externalReference: Optional[str] = None
    product: str
    stocks: Optional[List["StockInput"]] = None


class ProductVariantBulkUpdateInput(BaseModel):
    attributes: Optional[List["BulkAttributeValueInput"]] = None
    sku: Optional[str] = None
    name: Optional[str] = None
    trackInventory: Optional[bool] = None
    weight: Optional[Any] = None
    preorder: Optional["PreorderSettingsInput"] = None
    quantityLimitPerCustomer: Optional[int] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None
    externalReference: Optional[str] = None
    stocks: Optional["ProductVariantStocksUpdateInput"] = None
    channelListings: Optional["ProductVariantChannelListingUpdateInput"] = None
    id: str


class ProductVariantStocksUpdateInput(BaseModel):
    create: Optional[List["StockInput"]] = None
    update: Optional[List["StockUpdateInput"]] = None
    remove: Optional[List[str]] = None


class StockUpdateInput(BaseModel):
    stock: str
    quantity: int


class ProductVariantChannelListingUpdateInput(BaseModel):
    create: Optional[List["ProductVariantChannelListingAddInput"]] = None
    update: Optional[List["ChannelListingUpdateInput"]] = None
    remove: Optional[List[str]] = None


class ChannelListingUpdateInput(BaseModel):
    channelListing: str
    price: Optional[Any] = None
    costPrice: Optional[Any] = None
    priorPrice: Optional[Any] = None
    preorderThreshold: Optional[int] = None


class ProductVariantInput(BaseModel):
    attributes: Optional[List["AttributeValueInput"]] = None
    sku: Optional[str] = None
    name: Optional[str] = None
    trackInventory: Optional[bool] = None
    weight: Optional[Any] = None
    preorder: Optional["PreorderSettingsInput"] = None
    quantityLimitPerCustomer: Optional[int] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None
    externalReference: Optional[str] = None


class NameTranslationInput(BaseModel):
    name: Optional[str] = None


class ProductVariantBulkTranslateInput(BaseModel):
    id: Optional[str] = None
    externalReference: Optional[str] = None
    languageCode: LanguageCodeEnum
    translationFields: "NameTranslationInput"


class PaymentCheckBalanceInput(BaseModel):
    gatewayId: str
    method: str
    channel: str
    card: "CardInput"


class CardInput(BaseModel):
    code: str
    cvc: Optional[str] = None
    money: "MoneyInput"


class MoneyInput(BaseModel):
    currency: str
    amount: Any


class TransactionCreateInput(BaseModel):
    name: Optional[str] = None
    message: Optional[str] = None
    pspReference: Optional[str] = None
    availableActions: Optional[List[TransactionActionEnum]] = None
    amountAuthorized: Optional["MoneyInput"] = None
    amountCharged: Optional["MoneyInput"] = None
    amountRefunded: Optional["MoneyInput"] = None
    amountCanceled: Optional["MoneyInput"] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None
    externalUrl: Optional[str] = None
    paymentMethodDetails: Optional["PaymentMethodDetailsInput"] = None


class PaymentMethodDetailsInput(BaseModel):
    card: Optional["CardPaymentMethodDetailsInput"] = None
    other: Optional["OtherPaymentMethodDetailsInput"] = None


class CardPaymentMethodDetailsInput(BaseModel):
    name: str
    brand: Optional[str] = None
    firstDigits: Optional[str] = None
    lastDigits: Optional[str] = None
    expMonth: Optional[int] = None
    expYear: Optional[int] = None


class OtherPaymentMethodDetailsInput(BaseModel):
    name: str


class TransactionEventInput(BaseModel):
    pspReference: Optional[str] = None
    message: Optional[str] = None


class TransactionUpdateInput(BaseModel):
    name: Optional[str] = None
    message: Optional[str] = None
    pspReference: Optional[str] = None
    availableActions: Optional[List[TransactionActionEnum]] = None
    amountAuthorized: Optional["MoneyInput"] = None
    amountCharged: Optional["MoneyInput"] = None
    amountRefunded: Optional["MoneyInput"] = None
    amountCanceled: Optional["MoneyInput"] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None
    externalUrl: Optional[str] = None
    paymentMethodDetails: Optional["PaymentMethodDetailsInput"] = None


class PaymentGatewayToInitialize(BaseModel):
    id: str
    data: Optional[Any] = None


class PageCreateInput(BaseModel):
    slug: Optional[str] = None
    title: Optional[str] = None
    content: Optional[Any] = None
    attributes: Optional[List["AttributeValueInput"]] = None
    isPublished: Optional[bool] = None
    publicationDate: Optional[str] = None
    publishedAt: Optional[Any] = None
    seo: Optional["SeoInput"] = None
    pageType: str


class PageInput(BaseModel):
    slug: Optional[str] = None
    title: Optional[str] = None
    content: Optional[Any] = None
    attributes: Optional[List["AttributeValueInput"]] = None
    isPublished: Optional[bool] = None
    publicationDate: Optional[str] = None
    publishedAt: Optional[Any] = None
    seo: Optional["SeoInput"] = None


class PageTranslationInput(BaseModel):
    slug: Optional[str] = None
    seoTitle: Optional[str] = None
    seoDescription: Optional[str] = None
    title: Optional[str] = None
    content: Optional[Any] = None


class PageTypeCreateInput(BaseModel):
    name: Optional[str] = None
    slug: Optional[str] = None
    addAttributes: Optional[List[str]] = None


class PageTypeUpdateInput(BaseModel):
    name: Optional[str] = None
    slug: Optional[str] = None
    addAttributes: Optional[List[str]] = None
    removeAttributes: Optional[List[str]] = None


class DraftOrderCreateInput(BaseModel):
    billingAddress: Optional["AddressInput"] = None
    saveBillingAddress: Optional[bool] = None
    user: Optional[str] = None
    userEmail: Optional[str] = None
    discount: Optional[Any] = None
    shippingAddress: Optional["AddressInput"] = None
    saveShippingAddress: Optional[bool] = None
    shippingMethod: Optional[str] = None
    voucher: Optional[str] = None
    voucherCode: Optional[str] = None
    customerNote: Optional[str] = None
    channelId: Optional[str] = None
    redirectUrl: Optional[str] = None
    externalReference: Optional[str] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None
    languageCode: Optional[LanguageCodeEnum] = None
    lines: Optional[List["OrderLineCreateInput"]] = None


class OrderLineCreateInput(BaseModel):
    quantity: int
    variantId: str
    forceNewLine: Optional[bool] = None
    price: Optional[Any] = None


class DraftOrderInput(BaseModel):
    billingAddress: Optional["AddressInput"] = None
    saveBillingAddress: Optional[bool] = None
    user: Optional[str] = None
    userEmail: Optional[str] = None
    discount: Optional[Any] = None
    shippingAddress: Optional["AddressInput"] = None
    saveShippingAddress: Optional[bool] = None
    shippingMethod: Optional[str] = None
    voucher: Optional[str] = None
    voucherCode: Optional[str] = None
    customerNote: Optional[str] = None
    channelId: Optional[str] = None
    redirectUrl: Optional[str] = None
    externalReference: Optional[str] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None
    languageCode: Optional[LanguageCodeEnum] = None


class OrderAddNoteInput(BaseModel):
    message: str


class OrderFulfillInput(BaseModel):
    lines: List["OrderFulfillLineInput"]
    notifyCustomer: Optional[bool] = None
    allowStockToBeExceeded: Optional[bool] = None
    trackingNumber: Optional[str] = None


class OrderFulfillLineInput(BaseModel):
    orderLineId: Optional[str] = None
    stocks: List["OrderFulfillStockInput"]


class OrderFulfillStockInput(BaseModel):
    quantity: int
    warehouse: str


class FulfillmentCancelInput(BaseModel):
    warehouseId: Optional[str] = None


class FulfillmentUpdateTrackingInput(BaseModel):
    trackingNumber: Optional[str] = None
    notifyCustomer: Optional[bool] = None


class OrderRefundProductsInput(BaseModel):
    orderLines: Optional[List["OrderRefundLineInput"]] = None
    fulfillmentLines: Optional[List["OrderRefundFulfillmentLineInput"]] = None
    amountToRefund: Optional[Any] = None
    includeShippingCosts: Optional[bool] = None


class OrderRefundLineInput(BaseModel):
    orderLineId: str
    quantity: int


class OrderRefundFulfillmentLineInput(BaseModel):
    fulfillmentLineId: str
    quantity: int


class OrderReturnProductsInput(BaseModel):
    orderLines: Optional[List["OrderReturnLineInput"]] = None
    fulfillmentLines: Optional[List["OrderReturnFulfillmentLineInput"]] = None
    amountToRefund: Optional[Any] = None
    includeShippingCosts: Optional[bool] = None
    refund: Optional[bool] = None


class OrderReturnLineInput(BaseModel):
    orderLineId: str
    quantity: int
    replace: Optional[bool] = None


class OrderReturnFulfillmentLineInput(BaseModel):
    fulfillmentLineId: str
    quantity: int
    replace: Optional[bool] = None


class OrderGrantRefundCreateInput(BaseModel):
    amount: Optional[Any] = None
    reason: Optional[str] = None
    lines: Optional[List["OrderGrantRefundCreateLineInput"]] = None
    grantRefundForShipping: Optional[bool] = None
    transactionId: str


class OrderGrantRefundCreateLineInput(BaseModel):
    id: str
    quantity: int
    reason: Optional[str] = None


class OrderGrantRefundUpdateInput(BaseModel):
    amount: Optional[Any] = None
    reason: Optional[str] = None
    addLines: Optional[List["OrderGrantRefundUpdateLineAddInput"]] = None
    removeLines: Optional[List[str]] = None
    grantRefundForShipping: Optional[bool] = None
    transactionId: Optional[str] = None


class OrderGrantRefundUpdateLineAddInput(BaseModel):
    id: str
    quantity: int
    reason: Optional[str] = None


class OrderLineInput(BaseModel):
    quantity: int


class OrderDiscountCommonInput(BaseModel):
    valueType: DiscountValueTypeEnum
    value: Any
    reason: Optional[str] = None


class OrderNoteInput(BaseModel):
    message: str


class OrderUpdateInput(BaseModel):
    billingAddress: Optional["AddressInput"] = None
    userEmail: Optional[str] = None
    shippingAddress: Optional["AddressInput"] = None
    externalReference: Optional[str] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None
    languageCode: Optional[LanguageCodeEnum] = None


class OrderUpdateShippingInput(BaseModel):
    shippingMethod: Optional[str] = None


class OrderBulkCreateInput(BaseModel):
    externalReference: Optional[str] = None
    channel: str
    createdAt: Any
    status: Optional[OrderStatus] = None
    user: "OrderBulkCreateUserInput"
    billingAddress: "AddressInput"
    shippingAddress: Optional["AddressInput"] = None
    currency: str
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None
    customerNote: Optional[str] = None
    notes: Optional[List["OrderBulkCreateNoteInput"]] = None
    languageCode: LanguageCodeEnum
    displayGrossPrices: Optional[bool] = None
    weight: Optional[Any] = None
    redirectUrl: Optional[str] = None
    lines: List["OrderBulkCreateOrderLineInput"]
    deliveryMethod: Optional["OrderBulkCreateDeliveryMethodInput"] = None
    giftCards: Optional[List[str]] = None
    voucherCode: Optional[str] = None
    discounts: Optional[List["OrderDiscountCommonInput"]] = None
    fulfillments: Optional[List["OrderBulkCreateFulfillmentInput"]] = None
    transactions: Optional[List["TransactionCreateInput"]] = None
    invoices: Optional[List["OrderBulkCreateInvoiceInput"]] = None


class OrderBulkCreateUserInput(BaseModel):
    id: Optional[str] = None
    email: Optional[str] = None
    externalReference: Optional[str] = None


class OrderBulkCreateNoteInput(BaseModel):
    message: str
    date: Optional[Any] = None
    userId: Optional[str] = None
    userEmail: Optional[str] = None
    userExternalReference: Optional[str] = None
    appId: Optional[str] = None


class OrderBulkCreateOrderLineInput(BaseModel):
    variantId: Optional[str] = None
    variantSku: Optional[str] = None
    variantExternalReference: Optional[str] = None
    variantName: Optional[str] = None
    productName: Optional[str] = None
    productSku: Optional[str] = None
    translatedVariantName: Optional[str] = None
    translatedProductName: Optional[str] = None
    createdAt: Any
    isShippingRequired: bool
    isGiftCard: bool
    quantity: int
    totalPrice: "TaxedMoneyInput"
    undiscountedTotalPrice: "TaxedMoneyInput"
    unitDiscountReason: Optional[str] = None
    unitDiscountType: Optional[DiscountValueTypeEnum] = None
    unitDiscountValue: Optional[Any] = None
    warehouse: str
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None
    taxRate: Optional[Any] = None
    taxClassId: Optional[str] = None
    taxClassName: Optional[str] = None
    taxClassMetadata: Optional[List["MetadataInput"]] = None
    taxClassPrivateMetadata: Optional[List["MetadataInput"]] = None


class TaxedMoneyInput(BaseModel):
    gross: Any
    net: Any


class OrderBulkCreateDeliveryMethodInput(BaseModel):
    warehouseId: Optional[str] = None
    warehouseName: Optional[str] = None
    shippingMethodId: Optional[str] = None
    shippingMethodName: Optional[str] = None
    shippingPrice: Optional["TaxedMoneyInput"] = None
    shippingTaxRate: Optional[Any] = None
    shippingTaxClassId: Optional[str] = None
    shippingTaxClassName: Optional[str] = None
    shippingTaxClassMetadata: Optional[List["MetadataInput"]] = None
    shippingTaxClassPrivateMetadata: Optional[List["MetadataInput"]] = None


class OrderBulkCreateFulfillmentInput(BaseModel):
    trackingCode: Optional[str] = None
    lines: Optional[List["OrderBulkCreateFulfillmentLineInput"]] = None


class OrderBulkCreateFulfillmentLineInput(BaseModel):
    variantId: Optional[str] = None
    variantSku: Optional[str] = None
    variantExternalReference: Optional[str] = None
    quantity: int
    warehouse: str
    orderLineIndex: int


class OrderBulkCreateInvoiceInput(BaseModel):
    createdAt: Any
    number: Optional[str] = None
    url: Optional[str] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None


class MenuCreateInput(BaseModel):
    name: str
    slug: Optional[str] = None
    items: Optional[List["MenuItemInput"]] = None


class MenuItemInput(BaseModel):
    name: Optional[str] = None
    url: Optional[str] = None
    category: Optional[str] = None
    collection: Optional[str] = None
    page: Optional[str] = None


class MenuInput(BaseModel):
    name: Optional[str] = None
    slug: Optional[str] = None


class MenuItemCreateInput(BaseModel):
    name: str
    url: Optional[str] = None
    category: Optional[str] = None
    collection: Optional[str] = None
    page: Optional[str] = None
    menu: str
    parent: Optional[str] = None


class MenuItemMoveInput(BaseModel):
    itemId: str
    parentId: Optional[str] = None
    sortOrder: Optional[int] = None


class InvoiceCreateInput(BaseModel):
    number: str
    url: str
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None


class UpdateInvoiceInput(BaseModel):
    number: Optional[str] = None
    url: Optional[str] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None


class GiftCardCreateInput(BaseModel):
    addTags: Optional[List[str]] = None
    expiryDate: Optional[Any] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None
    startDate: Optional[Any] = None
    endDate: Optional[Any] = None
    balance: "PriceInput"
    userEmail: Optional[str] = None
    channel: Optional[str] = None
    isActive: bool
    code: Optional[str] = None
    note: Optional[str] = None


class PriceInput(BaseModel):
    currency: str
    amount: Any


class GiftCardUpdateInput(BaseModel):
    addTags: Optional[List[str]] = None
    expiryDate: Optional[Any] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None
    startDate: Optional[Any] = None
    endDate: Optional[Any] = None
    removeTags: Optional[List[str]] = None
    balanceAmount: Optional[Any] = None


class GiftCardResendInput(BaseModel):
    id: str
    email: Optional[str] = None
    channel: str


class GiftCardAddNoteInput(BaseModel):
    message: str


class GiftCardBulkCreateInput(BaseModel):
    count: int
    balance: "PriceInput"
    tags: Optional[List[str]] = None
    expiryDate: Optional[Any] = None
    isActive: bool


class PluginUpdateInput(BaseModel):
    active: Optional[bool] = None
    configuration: Optional[List["ConfigurationItemInput"]] = None


class ConfigurationItemInput(BaseModel):
    name: str
    value: Optional[str] = None


class ExternalNotificationTriggerInput(BaseModel):
    ids: List[str]
    extraPayload: Optional[Any] = None
    externalEventType: str


class PromotionCreateInput(BaseModel):
    description: Optional[Any] = None
    startDate: Optional[Any] = None
    endDate: Optional[Any] = None
    name: str
    type: PromotionTypeEnum
    rules: Optional[List["PromotionRuleInput"]] = None


class PromotionRuleInput(BaseModel):
    name: Optional[str] = None
    description: Optional[Any] = None
    cataloguePredicate: Optional["CataloguePredicateInput"] = None
    orderPredicate: Optional["OrderPredicateInput"] = None
    rewardValueType: Optional[RewardValueTypeEnum] = None
    rewardValue: Optional[Any] = None
    rewardType: Optional[RewardTypeEnum] = None
    channels: Optional[List[str]] = None
    gifts: Optional[List[str]] = None


class CataloguePredicateInput(BaseModel):
    variantPredicate: Optional["ProductVariantWhereInput"] = None
    productPredicate: Optional["ProductWhereInput"] = None
    categoryPredicate: Optional["CategoryWhereInput"] = None
    collectionPredicate: Optional["CollectionWhereInput"] = None
    AND: Optional[List["CataloguePredicateInput"]] = None
    OR: Optional[List["CataloguePredicateInput"]] = None


class OrderPredicateInput(BaseModel):
    discountedObjectPredicate: Optional["DiscountedObjectWhereInput"] = None
    AND: Optional[List["OrderPredicateInput"]] = None
    OR: Optional[List["OrderPredicateInput"]] = None


class DiscountedObjectWhereInput(BaseModel):
    baseSubtotalPrice: Optional["DecimalFilterInput"] = None
    baseTotalPrice: Optional["DecimalFilterInput"] = None
    AND: Optional[List["DiscountedObjectWhereInput"]] = None
    OR: Optional[List["DiscountedObjectWhereInput"]] = None


class PromotionUpdateInput(BaseModel):
    description: Optional[Any] = None
    startDate: Optional[Any] = None
    endDate: Optional[Any] = None
    name: Optional[str] = None


class PromotionRuleCreateInput(BaseModel):
    name: Optional[str] = None
    description: Optional[Any] = None
    cataloguePredicate: Optional["CataloguePredicateInput"] = None
    orderPredicate: Optional["OrderPredicateInput"] = None
    rewardValueType: Optional[RewardValueTypeEnum] = None
    rewardValue: Optional[Any] = None
    rewardType: Optional[RewardTypeEnum] = None
    channels: Optional[List[str]] = None
    gifts: Optional[List[str]] = None
    promotion: str


class PromotionRuleUpdateInput(BaseModel):
    name: Optional[str] = None
    description: Optional[Any] = None
    cataloguePredicate: Optional["CataloguePredicateInput"] = None
    orderPredicate: Optional["OrderPredicateInput"] = None
    rewardValueType: Optional[RewardValueTypeEnum] = None
    rewardValue: Optional[Any] = None
    rewardType: Optional[RewardTypeEnum] = None
    addChannels: Optional[List[str]] = None
    removeChannels: Optional[List[str]] = None
    addGifts: Optional[List[str]] = None
    removeGifts: Optional[List[str]] = None


class PromotionTranslationInput(BaseModel):
    name: Optional[str] = None
    description: Optional[Any] = None


class PromotionRuleTranslationInput(BaseModel):
    name: Optional[str] = None
    description: Optional[Any] = None


class SaleInput(BaseModel):
    name: Optional[str] = None
    type: Optional[DiscountValueTypeEnum] = None
    value: Optional[Any] = None
    products: Optional[List[str]] = None
    variants: Optional[List[str]] = None
    categories: Optional[List[str]] = None
    collections: Optional[List[str]] = None
    startDate: Optional[Any] = None
    endDate: Optional[Any] = None


class CatalogueInput(BaseModel):
    products: Optional[List[str]] = None
    categories: Optional[List[str]] = None
    collections: Optional[List[str]] = None
    variants: Optional[List[str]] = None


class SaleChannelListingInput(BaseModel):
    addChannels: Optional[List["SaleChannelListingAddInput"]] = None
    removeChannels: Optional[List[str]] = None


class SaleChannelListingAddInput(BaseModel):
    channelId: str
    discountValue: Any


class VoucherInput(BaseModel):
    type: Optional[VoucherTypeEnum] = None
    name: Optional[str] = None
    code: Optional[str] = None
    addCodes: Optional[List[str]] = None
    startDate: Optional[Any] = None
    endDate: Optional[Any] = None
    discountValueType: Optional[DiscountValueTypeEnum] = None
    products: Optional[List[str]] = None
    variants: Optional[List[str]] = None
    collections: Optional[List[str]] = None
    categories: Optional[List[str]] = None
    minCheckoutItemsQuantity: Optional[int] = None
    countries: Optional[List[str]] = None
    applyOncePerOrder: Optional[bool] = None
    applyOncePerCustomer: Optional[bool] = None
    onlyForStaff: Optional[bool] = None
    singleUse: Optional[bool] = None
    usageLimit: Optional[int] = None


class VoucherChannelListingInput(BaseModel):
    addChannels: Optional[List["VoucherChannelListingAddInput"]] = None
    removeChannels: Optional[List[str]] = None


class VoucherChannelListingAddInput(BaseModel):
    channelId: str
    discountValue: Optional[Any] = None
    minAmountSpent: Optional[Any] = None


class ExportProductsInput(BaseModel):
    scope: ExportScope
    filter: Optional["ProductFilterInput"] = None
    ids: Optional[List[str]] = None
    exportInfo: Optional["ExportInfoInput"] = None
    fileType: FileTypesEnum


class ExportInfoInput(BaseModel):
    attributes: Optional[List[str]] = None
    warehouses: Optional[List[str]] = None
    channels: Optional[List[str]] = None
    fields: Optional[List[ProductFieldEnum]] = None


class ExportGiftCardsInput(BaseModel):
    scope: ExportScope
    filter: Optional["GiftCardFilterInput"] = None
    ids: Optional[List[str]] = None
    fileType: FileTypesEnum


class ExportVoucherCodesInput(BaseModel):
    voucherId: Optional[str] = None
    ids: Optional[List[str]] = None
    fileType: FileTypesEnum


class CheckoutAddressValidationRules(BaseModel):
    checkRequiredFields: Optional[bool] = None
    checkFieldsFormat: Optional[bool] = None
    enableFieldsNormalization: Optional[bool] = None


class CheckoutCreateInput(BaseModel):
    channel: Optional[str] = None
    lines: List["CheckoutLineInput"]
    email: Optional[str] = None
    saveShippingAddress: Optional[bool] = None
    shippingAddress: Optional["AddressInput"] = None
    saveBillingAddress: Optional[bool] = None
    billingAddress: Optional["AddressInput"] = None
    languageCode: Optional[LanguageCodeEnum] = None
    validationRules: Optional["CheckoutValidationRules"] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None


class CheckoutLineInput(BaseModel):
    quantity: int
    variantId: str
    price: Optional[Any] = None
    forceNewLine: Optional[bool] = None
    metadata: Optional[List["MetadataInput"]] = None


class CheckoutValidationRules(BaseModel):
    shippingAddress: Optional["CheckoutAddressValidationRules"] = None
    billingAddress: Optional["CheckoutAddressValidationRules"] = None


class CheckoutLineUpdateInput(BaseModel):
    variantId: Optional[str] = None
    quantity: Optional[int] = None
    price: Optional[Any] = None
    lineId: Optional[str] = None
    metadata: Optional[List["MetadataInput"]] = None


class PaymentInput(BaseModel):
    gateway: str
    token: Optional[str] = None
    amount: Optional[Any] = None
    returnUrl: Optional[str] = None
    storePaymentMethod: Optional[StorePaymentMethodEnum] = None
    metadata: Optional[List["MetadataInput"]] = None


class ChannelCreateInput(BaseModel):
    isActive: Optional[bool] = None
    stockSettings: Optional["StockSettingsInput"] = None
    addShippingZones: Optional[List[str]] = None
    addWarehouses: Optional[List[str]] = None
    orderSettings: Optional["OrderSettingsInput"] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None
    checkoutSettings: Optional["CheckoutSettingsInput"] = None
    paymentSettings: Optional["PaymentSettingsInput"] = None
    name: str
    slug: str
    currencyCode: str
    defaultCountry: CountryCode


class StockSettingsInput(BaseModel):
    allocationStrategy: AllocationStrategyEnum


class OrderSettingsInput(BaseModel):
    automaticallyConfirmAllNewOrders: Optional[bool] = None
    automaticallyFulfillNonShippableGiftCard: Optional[bool] = None
    expireOrdersAfter: Optional[Any] = None
    deleteExpiredOrdersAfter: Optional[Any] = None
    markAsPaidStrategy: Optional[MarkAsPaidStrategyEnum] = None
    allowUnpaidOrders: Optional[bool] = None
    includeDraftOrderInVoucherUsage: Optional[bool] = None
    draftOrderLinePriceFreezePeriod: Optional[Any] = None
    useLegacyLineDiscountPropagation: Optional[bool] = None


class CheckoutSettingsInput(BaseModel):
    useLegacyErrorFlow: Optional[bool] = None
    automaticallyCompleteFullyPaidCheckouts: Optional[bool] = None


class PaymentSettingsInput(BaseModel):
    defaultTransactionFlowStrategy: Optional[TransactionFlowStrategyEnum] = None
    releaseFundsForExpiredCheckouts: Optional[bool] = None
    checkoutTtlBeforeReleasingFunds: Optional[Any] = None
    checkoutReleaseFundsCutOffDate: Optional[Any] = None


class ChannelUpdateInput(BaseModel):
    isActive: Optional[bool] = None
    stockSettings: Optional["StockSettingsInput"] = None
    addShippingZones: Optional[List[str]] = None
    addWarehouses: Optional[List[str]] = None
    orderSettings: Optional["OrderSettingsInput"] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None
    checkoutSettings: Optional["CheckoutSettingsInput"] = None
    paymentSettings: Optional["PaymentSettingsInput"] = None
    name: Optional[str] = None
    slug: Optional[str] = None
    defaultCountry: Optional[CountryCode] = None
    removeShippingZones: Optional[List[str]] = None
    removeWarehouses: Optional[List[str]] = None


class ChannelDeleteInput(BaseModel):
    channelId: str


class AttributeCreateInput(BaseModel):
    inputType: Optional[AttributeInputTypeEnum] = None
    entityType: Optional[AttributeEntityTypeEnum] = None
    name: str
    slug: Optional[str] = None
    type: AttributeTypeEnum
    unit: Optional[MeasurementUnitsEnum] = None
    values: Optional[List["AttributeValueCreateInput"]] = None
    valueRequired: Optional[bool] = None
    isVariantOnly: Optional[bool] = None
    visibleInStorefront: Optional[bool] = None
    filterableInStorefront: Optional[bool] = None
    filterableInDashboard: Optional[bool] = None
    storefrontSearchPosition: Optional[int] = None
    availableInGrid: Optional[bool] = None
    externalReference: Optional[str] = None


class AttributeValueCreateInput(BaseModel):
    value: Optional[str] = None
    richText: Optional[Any] = None
    plainText: Optional[str] = None
    fileUrl: Optional[str] = None
    contentType: Optional[str] = None
    externalReference: Optional[str] = None
    name: str


class AttributeUpdateInput(BaseModel):
    name: Optional[str] = None
    slug: Optional[str] = None
    unit: Optional[MeasurementUnitsEnum] = None
    removeValues: Optional[List[str]] = None
    addValues: Optional[List["AttributeValueUpdateInput"]] = None
    valueRequired: Optional[bool] = None
    isVariantOnly: Optional[bool] = None
    visibleInStorefront: Optional[bool] = None
    filterableInStorefront: Optional[bool] = None
    filterableInDashboard: Optional[bool] = None
    storefrontSearchPosition: Optional[int] = None
    availableInGrid: Optional[bool] = None
    externalReference: Optional[str] = None


class AttributeValueUpdateInput(BaseModel):
    value: Optional[str] = None
    richText: Optional[Any] = None
    plainText: Optional[str] = None
    fileUrl: Optional[str] = None
    contentType: Optional[str] = None
    externalReference: Optional[str] = None
    name: Optional[str] = None


class AttributeBulkUpdateInput(BaseModel):
    id: Optional[str] = None
    externalReference: Optional[str] = None
    fields: "AttributeUpdateInput"


class AttributeBulkTranslateInput(BaseModel):
    id: Optional[str] = None
    externalReference: Optional[str] = None
    languageCode: LanguageCodeEnum
    translationFields: "NameTranslationInput"


class AttributeValueBulkTranslateInput(BaseModel):
    id: Optional[str] = None
    externalReference: Optional[str] = None
    languageCode: LanguageCodeEnum
    translationFields: "AttributeValueTranslationInput"


class AttributeValueTranslationInput(BaseModel):
    name: Optional[str] = None
    richText: Optional[Any] = None
    plainText: Optional[str] = None


class AppInput(BaseModel):
    name: Optional[str] = None
    identifier: Optional[str] = None
    permissions: Optional[List[PermissionEnum]] = None


class AppTokenInput(BaseModel):
    name: Optional[str] = None
    app: str


class AppInstallInput(BaseModel):
    appName: Optional[str] = None
    manifestUrl: Optional[str] = None
    activateAfterInstallation: Optional[bool] = None
    permissions: Optional[List[PermissionEnum]] = None


class AccountRegisterInput(BaseModel):
    firstName: Optional[str] = None
    lastName: Optional[str] = None
    languageCode: Optional[LanguageCodeEnum] = None
    email: str
    password: str
    redirectUrl: Optional[str] = None
    metadata: Optional[List["MetadataInput"]] = None
    channel: Optional[str] = None


class AccountInput(BaseModel):
    firstName: Optional[str] = None
    lastName: Optional[str] = None
    languageCode: Optional[LanguageCodeEnum] = None
    defaultBillingAddress: Optional["AddressInput"] = None
    defaultShippingAddress: Optional["AddressInput"] = None
    metadata: Optional[List["MetadataInput"]] = None


class UserCreateInput(BaseModel):
    defaultBillingAddress: Optional["AddressInput"] = None
    defaultShippingAddress: Optional["AddressInput"] = None
    firstName: Optional[str] = None
    lastName: Optional[str] = None
    email: Optional[str] = None
    isActive: Optional[bool] = None
    note: Optional[str] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None
    languageCode: Optional[LanguageCodeEnum] = None
    externalReference: Optional[str] = None
    isConfirmed: Optional[bool] = None
    redirectUrl: Optional[str] = None
    channel: Optional[str] = None


class CustomerInput(BaseModel):
    defaultBillingAddress: Optional["AddressInput"] = None
    defaultShippingAddress: Optional["AddressInput"] = None
    firstName: Optional[str] = None
    lastName: Optional[str] = None
    email: Optional[str] = None
    isActive: Optional[bool] = None
    note: Optional[str] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None
    languageCode: Optional[LanguageCodeEnum] = None
    externalReference: Optional[str] = None
    isConfirmed: Optional[bool] = None


class CustomerBulkUpdateInput(BaseModel):
    id: Optional[str] = None
    externalReference: Optional[str] = None
    input: "CustomerInput"


class StaffCreateInput(BaseModel):
    firstName: Optional[str] = None
    lastName: Optional[str] = None
    email: Optional[str] = None
    isActive: Optional[bool] = None
    note: Optional[str] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None
    addGroups: Optional[List[str]] = None
    redirectUrl: Optional[str] = None


class StaffUpdateInput(BaseModel):
    firstName: Optional[str] = None
    lastName: Optional[str] = None
    email: Optional[str] = None
    isActive: Optional[bool] = None
    note: Optional[str] = None
    metadata: Optional[List["MetadataInput"]] = None
    privateMetadata: Optional[List["MetadataInput"]] = None
    addGroups: Optional[List[str]] = None
    removeGroups: Optional[List[str]] = None


class PermissionGroupCreateInput(BaseModel):
    addPermissions: Optional[List[PermissionEnum]] = None
    addUsers: Optional[List[str]] = None
    addChannels: Optional[List[str]] = None
    name: str
    restrictedAccessToChannels: Optional[bool] = None


class PermissionGroupUpdateInput(BaseModel):
    addPermissions: Optional[List[PermissionEnum]] = None
    addUsers: Optional[List[str]] = None
    addChannels: Optional[List[str]] = None
    name: Optional[str] = None
    removePermissions: Optional[List[PermissionEnum]] = None
    removeUsers: Optional[List[str]] = None
    removeChannels: Optional[List[str]] = None
    restrictedAccessToChannels: Optional[bool] = None


AttributeValueWhereInput.model_rebuild()
AttributeFilterInput.model_rebuild()
AttributeWhereInput.model_rebuild()
ProductFilterInput.model_rebuild()
AttributeInput.model_rebuild()
AssignedAttributeValueInput.model_rebuild()
DecimalFilterInput.model_rebuild()
AssignedAttributeReferenceInput.model_rebuild()
ProductStockFilterInput.model_rebuild()
ProductWhereInput.model_rebuild()
DateTimeFilterInput.model_rebuild()
AddressInput.model_rebuild()
ProductVariantFilterInput.model_rebuild()
ProductVariantWhereInput.model_rebuild()
AssignedAttributeWhereInput.model_rebuild()
WarehouseFilterInput.model_rebuild()
TaxConfigurationFilterInput.model_rebuild()
TaxClassFilterInput.model_rebuild()
CategoryFilterInput.model_rebuild()
CategoryWhereInput.model_rebuild()
CollectionFilterInput.model_rebuild()
CollectionWhereInput.model_rebuild()
ProductTypeFilterInput.model_rebuild()
PageFilterInput.model_rebuild()
PageWhereInput.model_rebuild()
MetadataFilterInput.model_rebuild()
OrderFilterInput.model_rebuild()
OrderWhereInput.model_rebuild()
IntFilterInput.model_rebuild()
InvoiceFilterInput.model_rebuild()
FulfillmentFilterInput.model_rebuild()
FulfillmentWarehouseFilterInput.model_rebuild()
LinesFilterInput.model_rebuild()
TransactionFilterInput.model_rebuild()
PaymentMethodDetailsFilterInput.model_rebuild()
PaymentMethodDetailsCardFilterInput.model_rebuild()
PriceFilterInput.model_rebuild()
OrderEventFilterInput.model_rebuild()
AddressFilterInput.model_rebuild()
OrderDraftFilterInput.model_rebuild()
DraftOrderWhereInput.model_rebuild()
MenuFilterInput.model_rebuild()
MenuItemFilterInput.model_rebuild()
GiftCardFilterInput.model_rebuild()
PluginFilterInput.model_rebuild()
SaleFilterInput.model_rebuild()
VoucherFilterInput.model_rebuild()
PromotionWhereInput.model_rebuild()
ExportFileFilterInput.model_rebuild()
CheckoutFilterInput.model_rebuild()
CustomerFilterInput.model_rebuild()
CustomerWhereInput.model_rebuild()
WarehouseCreateInput.model_rebuild()
WarehouseUpdateInput.model_rebuild()
TaxClassCreateInput.model_rebuild()
TaxClassUpdateInput.model_rebuild()
TaxConfigurationUpdateInput.model_rebuild()
ShopSettingsInput.model_rebuild()
GiftCardSettingsUpdateInput.model_rebuild()
ShippingMethodChannelListingInput.model_rebuild()
ShippingPriceInput.model_rebuild()
CategoryInput.model_rebuild()
CollectionCreateInput.model_rebuild()
CollectionInput.model_rebuild()
CollectionChannelListingUpdateInput.model_rebuild()
ProductCreateInput.model_rebuild()
AttributeValueInput.model_rebuild()
ProductBulkCreateInput.model_rebuild()
ProductVariantBulkCreateInput.model_rebuild()
BulkAttributeValueInput.model_rebuild()
ProductInput.model_rebuild()
ProductBulkTranslateInput.model_rebuild()
ProductChannelListingUpdateInput.model_rebuild()
DigitalContentUploadInput.model_rebuild()
DigitalContentInput.model_rebuild()
ProductVariantCreateInput.model_rebuild()
ProductVariantBulkUpdateInput.model_rebuild()
ProductVariantStocksUpdateInput.model_rebuild()
ProductVariantChannelListingUpdateInput.model_rebuild()
ProductVariantInput.model_rebuild()
ProductVariantBulkTranslateInput.model_rebuild()
PaymentCheckBalanceInput.model_rebuild()
CardInput.model_rebuild()
TransactionCreateInput.model_rebuild()
PaymentMethodDetailsInput.model_rebuild()
TransactionUpdateInput.model_rebuild()
PageCreateInput.model_rebuild()
PageInput.model_rebuild()
DraftOrderCreateInput.model_rebuild()
DraftOrderInput.model_rebuild()
OrderFulfillInput.model_rebuild()
OrderFulfillLineInput.model_rebuild()
OrderRefundProductsInput.model_rebuild()
OrderReturnProductsInput.model_rebuild()
OrderGrantRefundCreateInput.model_rebuild()
OrderGrantRefundUpdateInput.model_rebuild()
OrderUpdateInput.model_rebuild()
OrderBulkCreateInput.model_rebuild()
OrderBulkCreateOrderLineInput.model_rebuild()
OrderBulkCreateDeliveryMethodInput.model_rebuild()
OrderBulkCreateFulfillmentInput.model_rebuild()
OrderBulkCreateInvoiceInput.model_rebuild()
MenuCreateInput.model_rebuild()
InvoiceCreateInput.model_rebuild()
UpdateInvoiceInput.model_rebuild()
GiftCardCreateInput.model_rebuild()
GiftCardUpdateInput.model_rebuild()
GiftCardBulkCreateInput.model_rebuild()
PluginUpdateInput.model_rebuild()
PromotionCreateInput.model_rebuild()
PromotionRuleInput.model_rebuild()
CataloguePredicateInput.model_rebuild()
OrderPredicateInput.model_rebuild()
DiscountedObjectWhereInput.model_rebuild()
PromotionRuleCreateInput.model_rebuild()
PromotionRuleUpdateInput.model_rebuild()
SaleChannelListingInput.model_rebuild()
VoucherChannelListingInput.model_rebuild()
ExportProductsInput.model_rebuild()
ExportGiftCardsInput.model_rebuild()
CheckoutCreateInput.model_rebuild()
CheckoutLineInput.model_rebuild()
CheckoutValidationRules.model_rebuild()
CheckoutLineUpdateInput.model_rebuild()
PaymentInput.model_rebuild()
ChannelCreateInput.model_rebuild()
ChannelUpdateInput.model_rebuild()
AttributeCreateInput.model_rebuild()
AttributeUpdateInput.model_rebuild()
AttributeBulkUpdateInput.model_rebuild()
AttributeBulkTranslateInput.model_rebuild()
AttributeValueBulkTranslateInput.model_rebuild()
AccountRegisterInput.model_rebuild()
AccountInput.model_rebuild()
UserCreateInput.model_rebuild()
CustomerInput.model_rebuild()
CustomerBulkUpdateInput.model_rebuild()
StaffCreateInput.model_rebuild()
StaffUpdateInput.model_rebuild()
